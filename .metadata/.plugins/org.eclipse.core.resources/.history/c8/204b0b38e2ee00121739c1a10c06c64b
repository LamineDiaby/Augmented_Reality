/**
 * 
 */
package com.valtech.projetikea;

import android.util.Log;

import com.metaio.sdk.ARViewActivity;
import com.metaio.sdk.MetaioDebug;
import com.metaio.sdk.jni.IGeometry;
import com.metaio.sdk.jni.IMetaioSDKCallback;
import com.metaio.sdk.jni.Vector3d;
import com.metaio.tools.io.AssetsManager;

/**
 * @author mohamed.diaby
 *
 */
public class Zone_Montage2 extends ARViewActivity {

	/**
	 * 
	 */
	public IGeometry mModel;
	public IGeometry mVis;
	
	/* (non-Javadoc)
	 * @see com.metaio.sdk.ARViewActivity#getGUILayout()
	 */
	@Override
	protected int getGUILayout() {
		// TODO Auto-generated method stub
		return R.layout.animation_first_page;
	}
	
	public void onButtonClick()
	{
		finish();
	}

	/* (non-Javadoc)
	 * @see com.metaio.sdk.ARViewActivity#getMetaioSDKCallbackHandler()
	 */
	@Override
	protected IMetaioSDKCallback getMetaioSDKCallbackHandler() {
		// TODO Auto-generated method stub
		return null;
	}

	/* (non-Javadoc)
	 * @see com.metaio.sdk.ARViewActivity#loadContents()
	 */
	
	@Override
	protected void loadContents() 
	{
		try
		{
			// Getting a file path for tracking configuration XML file
			String trackingConfigFile = AssetsManager.getAssetPath("ZoneMontage/Assets2/TrackingData_MarkerlessFast.xml");
			
			// Assigning tracking configuration
			boolean result = metaioSDK.setTrackingConfiguration(trackingConfigFile); 
			MetaioDebug.log("Tracking data loaded: " + result); 
	        
			// Getting a file path for a 3D geometry
			String metaioManModel = AssetsManager.getAssetPath("ZoneMontage/Assets2/metaioman.md2");			
			if (metaioManModel != null) 
			{
				// Loading 3D geometry
				mModel = metaioSDK.createGeometry(metaioManModel);
				if (mModel != null) 
				{
					// Set geometry properties
					mModel.setScale(new Vector3d(80.0f, 80.0f, 80.0f));
					mModel.setVisible(true);
					
					
				}
				else
					MetaioDebug.log(Log.ERROR, "Error loading geometry: "+metaioManModel);
			}
			
			// Getting a file path for a 3D geometry
						String viceModel = AssetsManager.getAssetPath("ZoneMontage/Assets2/metaioman.md2");			
						if (viceModel != null) 
						{
							// Loading 3D geometry
							mVis = metaioSDK.createGeometry(viceModel);
							if (mVis != null) 
							{
								// Set geometry properties
								mVis.setScale(new Vector3d(80.0f, 80.0f, 80.0f));
								
							}
							else
								MetaioDebug.log(Log.ERROR, "Error loading geometry: "+viceModel);
						}
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	

	/* (non-Javadoc)
	 * @see com.metaio.sdk.ARViewActivity#onGeometryTouched(com.metaio.sdk.jni.IGeometry)
	 */
	@Override
	protected void onGeometryTouched(IGeometry geometry) {
		// TODO Auto-generated method stub

	}

}
